{"version":3,"sources":["components/Profile/Profile.module.css","components/FriendList/FriendList.module.css","components/Statistics/Statistics.module.css","components/TransactionHistory/TransactionHistory.module.css","components/Profile/Profile.js","components/Statistics/RandomColor.js","components/Statistics/Statistics.js","components/FriendList/FriendListItem.js","components/FriendList/FriendsList.jsx","components/TransactionHistory/TransactionHistory.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Profile","name","tag","location","avatar","stats","className","s","profile","description","src","alt","label","quantity","followers","views","likes","GetRandomColor","Math","round","random","Statistics","title","statistics","list","map","id","percentage","item","style","backgroundColor","FriendListItem","isOnline","isOffline","width","FriendList","friends","friend","TransactionHistory","items","transaction","thead","tbody","type","amount","currency","App","user","statisticalData","transactions","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wFACAA,EAAOC,QAAU,CAAC,OAAS,wBAAwB,QAAU,yBAAyB,MAAQ,uBAAuB,KAAO,sBAAsB,KAAO,sBAAsB,MAAQ,uBAAuB,SAAW,4B,gBCAzND,EAAOC,QAAU,CAAC,KAAO,yBAAyB,OAAS,2BAA2B,KAAO,yBAAyB,KAAO,yBAAyB,OAAS,2BAA2B,SAAW,6BAA6B,SAAW,wDAAwD,UAAY,2D,4PCAjTD,EAAOC,QAAU,CAAC,WAAa,+BAA+B,MAAQ,0BAA0B,KAAO,yBAAyB,KAAO,yBAAyB,MAAQ,0BAA0B,WAAa,iC,iBCA/MD,EAAOC,QAAU,CAAC,YAAc,wCAAwC,MAAQ,kCAAkC,MAAQ,oC,m/FCyC3GC,EAvCC,SAAC,GAAD,IAAEC,EAAF,EAAEA,KAAKC,EAAP,EAAOA,IAAIC,EAAX,EAAWA,SAASC,EAApB,EAAoBA,OAAOC,EAA3B,EAA2BA,MAA3B,OACZ,sBAAKC,UAAWC,IAAEC,QAAlB,UAEF,sBAAKF,UAAWC,IAAEE,YAAlB,UACE,qBACEC,IAAKN,EACLO,IAAI,gHACJL,UAAWC,IAAEH,SAEf,mBAAGE,UAAWC,IAAEN,KAAhB,SAAuBA,IACvB,mBAAGK,UAAWC,IAAEL,IAAhB,SAAsBA,IACtB,mBAAGI,UAAWC,IAAEJ,SAAhB,SAA2BA,OAG7B,qBAAIG,UAAWC,IAAEF,MAAjB,UACE,+BACE,sBAAMC,UAAWC,IAAEK,MAAnB,wBACE,sBAAMN,UAAWC,IAAEM,SAAnB,SAA8BR,EAAMS,eAExC,+BACE,sBAAMR,UAAWC,IAAEK,MAAnB,oBACA,sBAAMN,UAAWC,IAAEM,SAAnB,SAA8BR,EAAMU,WAEtC,+BACE,sBAAMT,UAAWC,IAAEK,MAAnB,oBACA,sBAAMN,UAAWC,IAAEM,SAAnB,SAA8BR,EAAMW,kB,uBCfzBC,MAbjB,WAUI,MARE,OACAC,KAAKC,MAAsB,IAAhBD,KAAKE,UAChB,IACAF,KAAKC,MAAsB,IAAhBD,KAAKE,UAChB,IACAF,KAAKC,MAAsB,IAAhBD,KAAKE,UAChB,KCsBSC,EA1BI,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,WAAV,OACnB,0BAASjB,UAAWC,IAAEgB,WAAtB,UACCD,GAAS,oBAAIhB,UAAWC,IAAEe,MAAjB,SAAyBA,IAEnC,oBAAIhB,UAAWC,IAAEiB,KAAjB,SACKD,EAAWE,KAAI,gBAAGC,EAAH,EAAGA,GAAId,EAAP,EAAOA,MAAP,IAAce,kBAAd,MAAyB,EAAzB,SACZ,qBAAIrB,UAAWC,IAAEqB,KAAeC,MAAO,CAAEC,gBAAiBb,KAA1D,UACI,sBAAMX,UAAWC,IAAEK,MAAnB,SAA2BA,IAC3B,uBAAMN,UAAWC,IAAEoB,WAAnB,UAAgCA,EAAhC,SAFwBD,Y,uBCYrBK,EAnBQ,SAAC,GAAgC,IAA9B3B,EAA6B,EAA7BA,OAAQH,EAAqB,EAArBA,KAAM+B,EAAe,EAAfA,SACpC,OACE,sBAAK1B,UAAWC,IAAEqB,KAAlB,UACE,sBAAMtB,UAAmB,UAAR0B,EAAczB,IAAEyB,SAAgBzB,IAAE0B,WAAnD,SACGD,IAEH,qBAAK1B,UAAWC,IAAEH,OAAQM,IAAKN,EAAQO,IAAKV,EAAMiC,MAAM,OACxD,mBAAG5B,UAAWC,IAAEN,KAAhB,SAAuBA,QCkBhBkC,MAxBf,YAAkC,IAAZC,EAAW,EAAXA,QAClB,OACE,oBAAI9B,UAAWC,IAAEiB,KAAjB,SACGY,EAAQX,KAAI,SAAAY,GAAM,OACjB,oBAAI/B,UAAWC,IAAE8B,OAAjB,SACE,cAAC,EAAD,CACEjC,OAAQiC,EAAOjC,OACfH,KAAMoC,EAAOpC,KACb+B,SAAUK,EAAOL,YAJSK,EAAOX,U,gCC0BhCY,EA/BY,SAAC,GAAD,IAAEC,EAAF,EAAEA,MAAF,OACvB,wBAAOjC,UAAWC,IAAEiC,YAApB,UACI,uBAAOlC,UAAWC,IAAEkC,MAApB,SACI,+BACI,sCACA,wCACA,+CAIR,uBAAOnC,UAAWC,IAAEmC,MAApB,SAA4BH,EAAMd,KAAI,gBAAEC,EAAF,EAAEA,GAAIiB,EAAN,EAAMA,KAAMC,EAAZ,EAAYA,OAAQC,EAApB,EAAoBA,SAApB,OAClC,+BACI,6BAAKF,IACL,6BAAKC,IACL,6BAAKC,MAHAnB,YCgCNoB,MA/Bf,WACE,OACF,gCACE,gCACE,iDACA,cAAC,EAAD,CAEA7C,KAAM8C,EAAK9C,KACXC,IAAK6C,EAAK7C,IACVC,SAAU4C,EAAK5C,SACfC,OAAQ2C,EAAK3C,OACbC,MAAO0C,EAAK1C,OALP0C,EAAK9C,SAOZ,gCACE,4CACA,cAAC,EAAD,CACAqB,MAAM,eACNC,WAAYyB,OAEd,gCACE,4CACA,cAAC,EAAD,CAAYZ,QAASA,IAFvB,OAIA,gCACE,sDACA,cAAC,EAAD,CAAoBG,MAAOU,WC5BhBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.ab99fe3b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatar\":\"Profile_avatar__310aX\",\"profile\":\"Profile_profile__21Dnz\",\"stats\":\"Profile_stats__2Et16\",\"item\":\"Profile_item__1WKkm\",\"name\":\"Profile_name__3AxG9\",\"label\":\"Profile_label__1Pdv-\",\"quantity\":\"Profile_quantity__WqZUU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"FriendList_item__dfCSH\",\"avatar\":\"FriendList_avatar__3tdTz\",\"name\":\"FriendList_name__1-f7u\",\"list\":\"FriendList_list__du1dE\",\"friend\":\"FriendList_friend__NNC2S\",\"presense\":\"FriendList_presense__3FLv_\",\"isOnline\":\"FriendList_isOnline__1Rba5 FriendList_presense__3FLv_\",\"isOffline\":\"FriendList_isOffline__3pIyB FriendList_presense__3FLv_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistics_statistics__27FHq\",\"title\":\"Statistics_title__215y2\",\"list\":\"Statistics_list__1azLH\",\"item\":\"Statistics_item__2RM00\",\"label\":\"Statistics_label__37_Bo\",\"percentage\":\"Statistics_percentage__1ZTUF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transaction\":\"TransactionHistory_transaction__3zSbi\",\"thead\":\"TransactionHistory_thead__RvrtW\",\"tbody\":\"TransactionHistory_tbody__L4k6k\"};","import PropTypes from 'prop-types';\r\nimport s from './Profile.module.css';\r\n\r\nconst Profile = ({name,tag,location,avatar,stats}) => (\r\n    <div className={s.profile}>\r\n    \r\n  <div className={s.description}>\r\n    <img\r\n      src={avatar}\r\n      alt=\"Аватар пользователя\"\r\n      className={s.avatar}\r\n    />\r\n    <p className={s.name}>{name}</p>\r\n    <p className={s.tag}>{tag}</p>\r\n    <p className={s.location}>{location}</p>\r\n  </div>\r\n\r\n  <ul className={s.stats}>\r\n    <li>\r\n      <span className={s.label}>Followers </span>\r\n        <span className={s.quantity}>{stats.followers}</span>\r\n    </li>\r\n    <li>\r\n      <span className={s.label}>Views </span>\r\n      <span className={s.quantity}>{stats.views}</span>\r\n    </li>\r\n    <li>\r\n      <span className={s.label}>Likes </span>\r\n      <span className={s.quantity}>{stats.likes}</span>\r\n    </li>\r\n  </ul>\r\n</div>\r\n);\r\n\r\nProfile.propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    tag: PropTypes.string.isRequired,\r\n    location: PropTypes.string.isRequired,\r\n    avatar: PropTypes.string.isRequired,\r\n    stats: PropTypes.objectOf(PropTypes.number),\r\n};\r\n  \r\nexport default Profile;\r\n\r\n","function GetRandomColor() {\r\n    let color =\r\n      'rgb(' +\r\n      Math.round(Math.random() * 256) +\r\n      ',' +\r\n      Math.round(Math.random() * 256) +\r\n      ',' +\r\n      Math.round(Math.random() * 256) +\r\n      ')';\r\n  \r\n    return color;\r\n  }\r\n  \r\n  export default GetRandomColor;","import PropTypes from 'prop-types';\r\nimport s from './Statistics.module.css';\r\nimport GetRandomColor from './RandomColor';\r\n\r\nconst Statistics = ({ title, statistics }) => (\r\n<section className={s.statistics}>\r\n{title && <h2 className={s.title}>{title}</h2>}\r\n\r\n<ul className={s.list}>\r\n    {statistics.map(({ id, label, percentage=0 }) => (\r\n        <li className={s.item} key={id} style={{ backgroundColor: GetRandomColor() }}>\r\n            <span className={s.label}>{label}</span>\r\n            <span className={s.percentage}>{percentage}%</span>\r\n        </li>\r\n    ))}\r\n</ul>\r\n</section>\r\n);\r\n\r\nStatistics.propTypes = {\r\n  title: PropTypes.string,\r\n  statistics: PropTypes.arrayOf(\r\n      PropTypes.shape({\r\n          id: PropTypes.string.isRequired,\r\n          lable: PropTypes.string,\r\n          percentage: PropTypes.number.isRequired,\r\n      })\r\n  )\r\n};\r\n\r\nexport default Statistics;\r\n","import PropTypes from 'prop-types';\r\nimport s from './FriendList.module.css';\r\n\r\nconst FriendListItem = ({ avatar, name, isOnline }) => {\r\n    return (\r\n      <div className={s.item}>\r\n        <span className={isOnline ? `${s.isOnline}` : `${s.isOffline}`}>\r\n          {isOnline}\r\n        </span>\r\n        <img className={s.avatar} src={avatar} alt={name} width=\"48\" />\r\n        <p className={s.name}>{name}</p>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  FriendListItem.propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    avatar: PropTypes.string.isRequired,\r\n    isOnline: PropTypes.bool.isRequired,\r\n    \r\n}\r\n\r\nexport default FriendListItem;\r\n\r\n// <ul className={s.list}>\r\n//       {friends.map(friend => (\r\n//         <li className={s.friend} key={friend.id}>\r\n//           <FriendListItem\r\n//             avatar={friend.avatar}\r\n//             name={friend.name}\r\n//             isOnline={friend.isOnline}\r\n//           />\r\n//         </li>\r\n//       ))}\r\n//     </ul>\r\n//   );\r\n// }","import PropTypes from 'prop-types';\r\nimport FriendListItem from './FriendListItem';\r\nimport s from './FriendList.module.css';\r\n\r\nfunction FriendList({ friends }) {\r\n    return (\r\n      <ul className={s.list}>\r\n        {friends.map(friend => (\r\n          <li className={s.friend} key={friend.id}>\r\n            <FriendListItem\r\n              avatar={friend.avatar}\r\n              name={friend.name}\r\n              isOnline={friend.isOnline}\r\n            />\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    );\r\n  }\r\n\r\nFriendList.propTypes = {\r\n    friends: PropTypes.arrayOf(\r\n      PropTypes.shape({\r\n        id: PropTypes.number.isRequired,\r\n      }),\r\n    ),\r\n  };\r\n\r\nexport default FriendList;\r\n","import PropTypes from 'prop-types';\r\nimport s from './TransactionHistory.module.css';\r\n\r\nconst TransactionHistory = ({items}) => (\r\n    <table className={s.transaction}>\r\n        <thead className={s.thead}>\r\n            <tr>\r\n                <th>Type</th>\r\n                <th>Amount</th>                                                                                                             \r\n                <th>Currency</th>\r\n            </tr>\r\n        </thead>\r\n\r\n        <tbody className={s.tbody}>{items.map(({id, type, amount, currency }) =>\r\n            <tr key={id} >\r\n                <td>{type}</td>\r\n                <td>{amount}</td>\r\n                <td>{currency}</td>\r\n            </tr>)}\r\n   \r\n        </tbody>\r\n    </table>\r\n);\r\n\r\nTransactionHistory.propTypes = {\r\n    items: PropTypes.arrayOf(\r\n         PropTypes.shape({\r\n             type: PropTypes.string.isRequired,\r\n             amount: PropTypes.string.isRequired,\r\n             currency: PropTypes.string.isRequired,\r\n         })\r\n     )\r\n };\r\n\r\nexport default TransactionHistory;","import './App.css';\n\nimport Profile from './components/Profile/Profile';\nimport user from './components/Profile/user.json';\n\nimport Statistics from './components/Statistics/Statistics'\nimport statisticalData from './components/Statistics/statistical-data.json';\n\nimport FriendList from './components/FriendList/FriendsList';\nimport friends from './components/FriendList/friends.json';\n\nimport transactions from './components/TransactionHistory/transactions.json';\nimport TransactionHistory from './components/TransactionHistory/TransactionHistory'\n\n\nfunction App() {\n  return (\n<div>\n  <div>\n    <h1>Social-profile </h1>\n    <Profile \n    key={user.name}\n    name={user.name}\n    tag={user.tag}\n    location={user.location}\n    avatar={user.avatar}\n    stats={user.stats}/>\n  </div>\n  <div>\n    <h1>Statistics</h1>\n    <Statistics \n    title=\"Upload stats\" \n    statistics={statisticalData} />\n  </div>\n  <div>\n    <h1>FriendList</h1>\n    <FriendList friends={friends} />,\n  </div>\n  <div>\n    <h1>Transactions history</h1>\n    <TransactionHistory items={transactions} />\n  </div>\n</div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}